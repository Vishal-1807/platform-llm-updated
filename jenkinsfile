pipeline {
    agent {
        docker {
            image 'node:18-bullseye'  // Debian-based Node.js image
            args '-u root'            // Run container as root to install packages
        }
    }

    environment {
        AZURE_SERVICE_PRINCIPAL_ID     = credentials('azure-sp-client-id')
        AZURE_SERVICE_PRINCIPAL_SECRET = credentials('azure-sp-client-secret')
        AZURE_TENANT_ID                = credentials('azure-sp-tenant-id')
        AZURE_SUBSCRIPTION_ID          = credentials('azure-subscription-id')

        STORAGE_ACCOUNT_NAME           = 'awonefrontendstatic12312'
        BUILD_DIR                     = 'dist'  // Your build output directory
    }

    stages {
        stage('Install Azure CLI') {
            steps {
                echo 'Installing Azure CLI'
                sh '''
                    apt-get update && \
                    apt-get install -y ca-certificates curl apt-transport-https lsb-release gnupg && \
                    curl -sL https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg && \
                    install -o root -g root -m 644 microsoft.gpg /usr/share/keyrings/microsoft.gpg && \
                    echo "deb [arch=amd64 signed-by=/usr/share/keyrings/microsoft.gpg] https://packages.microsoft.com/repos/azure-cli/ $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/azure-cli.list && \
                    apt-get update && \
                    apt-get install -y azure-cli
                '''
            }
        }

        stage('Check Files') {
            steps {
                echo 'Listing files in endpoint directory to verify EndPoint.css presence'
                sh 'ls -l src/components/Tabular/Experiment/Deploy/Endpoint/'
            }
        }

        stage('Build') {
            steps {
                echo 'Installing Node modules and building static files'
                sh 'npm install'
                sh 'npm run build'
            }
        }

        stage('Enable Static Website') {
            steps {
                echo 'Enabling static website hosting on Azure Storage Account'
                sh """
                    az login --service-principal -u ${AZURE_SERVICE_PRINCIPAL_ID} -p ${AZURE_SERVICE_PRINCIPAL_SECRET} --tenant ${AZURE_TENANT_ID}
                    az account set --subscription ${AZURE_SUBSCRIPTION_ID}
                """
            }
        }

        stage('Upload Static Files') {
            steps {
                echo 'Uploading built files to $web container'
                sh """
                    az storage blob upload-batch --account-name ${STORAGE_ACCOUNT_NAME} --destination '\$web' --source ${BUILD_DIR} --overwrite
                """
            }
        }
    }
}
