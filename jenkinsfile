pipeline {
    agent {
        docker {
            image 'mcr.microsoft.com/azure-cli'  
            args '-u root' 
        }
    }

    environment {
        AZURE_SERVICE_PRINCIPAL_ID     = credentials('azure-sp-client-id')
        AZURE_SERVICE_PRINCIPAL_SECRET = credentials('azure-sp-client-secret')
        AZURE_TENANT_ID                = credentials('azure-sp-tenant-id')
        AZURE_SUBSCRIPTION_ID          = credentials('azure-subscription-id')

        STORAGE_ACCOUNT_NAME           = 'awonefrontendstatic12312'
        RESOURCE_GROUP                 = 'awone-rg-terraform'
        BUILD_DIR                     = 'dist'  // Change to your build output folder
    }

    stages {
        stage('Install Node and npm') {
            steps {
                echo 'Installing Node.js and npm'
                sh '''
                   apt-get update
                   apt-get install -y nodejs npm
                   node -v
                   npm -v
                '''
            }
        }
        stage('Build') {
            steps {
                echo 'Building static files...'
                sh 'npm install'
                sh 'npm run build'
            }
        }
        stage('Enable Static Website') {
            steps {
                echo 'Enabling static website hosting in Azure Storage Account'
                sh """
                    az login --service-principal -u ${AZURE_SERVICE_PRINCIPAL_ID} -p ${AZURE_SERVICE_PRINCIPAL_SECRET} --tenant ${AZURE_TENANT_ID}
                    az account set --subscription ${AZURE_SUBSCRIPTION_ID}
                """
            }
        }
        stage('Upload to Azure Static Website') {
            steps {
                echo 'Uploading build files to $web container'
                sh """
                    az storage blob upload-batch \
                        --account-name ${STORAGE_ACCOUNT_NAME} \
                        --destination '$web' \
                        --source ${BUILD_DIR} \
                        --overwrite
                """
            }
        }
    }
}
