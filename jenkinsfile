pipeline {
    agent {
        docker {
            image 'node:18-bullseye'
            args '-u root'
        }
    }
    
    environment {
        AZURE_SERVICE_PRINCIPAL_ID     = credentials('azure-sp-client-id')
        AZURE_SERVICE_PRINCIPAL_SECRET = credentials('azure-sp-client-secret')
        AZURE_TENANT_ID                = credentials('azure-sp-tenant-id')
        AZURE_SUBSCRIPTION_ID          = credentials('azure-subscription-id')
        STORAGE_ACCOUNT_NAME           = 'awonefrontendstatic12312'
        BUILD_DIR                     = 'dist'
    }
    
    stages {
        stage('Clean and Checkout') {
            steps {
                script {
                    // Clean before checkout using Git extensions
                    checkout([
                        $class: 'GitSCM',
                        branches: [[name: '*/dev']],
                        extensions: [
                            [$class: 'CleanBeforeCheckout'],
                            [$class: 'CleanCheckout'],
                            [$class: 'LocalBranch', localBranch: '**']
                        ],
                        userRemoteConfigs: [[
                            url: 'https://github.com/Vishal-1807/platform-llm-updated.git',
                            credentialsId: 'git-jenkins'
                        ]]
                    ])
                }
            }
        }
        
        stage('Force Clean Workspace') {
            steps {
                sh '''
                    echo "Force cleaning any remaining dist files..."
                    # Force remove any dist files with proper permissions
                    chmod -R 755 dist/ 2>/dev/null || true
                    rm -rf dist/ 2>/dev/null || true
                    rm -f dist/** 2>/dev/null || true
                    echo "Workspace after cleanup:"
                    ls -la
                '''
            }
        }
        
        stage('Install Azure CLI') {
            steps {
                echo 'Installing Azure CLI'
                sh '''
                    apt-get update
                    apt-get install -y curl gnupg lsb-release
                    curl -sL https://aka.ms/InstallAzureCLIDeb | bash
                    az --version
                '''
            }
        }
        
        stage('Fix Case Sensitivity') {
            steps {
                sh '''
                    cd src/components/Tabular/Experiment/Deploy/Endpoint/
                    ln -sf Endpoint.css EndPoint.css 2>/dev/null || true
                '''
            }
        }
        
        stage('Build') {
            steps {
                sh '''
                    npm install
                    npm run build
                    echo "Build completed. Checking dist folder:"
                    ls -la dist/ && echo "SUCCESS: dist folder created!" || echo "ERROR: dist folder not found"
                '''
            }
        }

        stage('Deploy to Azure Storage') {
            steps {
                script {
                    withCredentials([
                        usernamePassword(
                            credentialsId: 'azure-sp-client-id',
                            usernameVariable: 'AZURE_CLIENT_ID',
                            passwordVariable: 'AZURE_CLIENT_SECRET'
                        )
                    ]) {
                        sh """
                            az login --service-principal \
                                -u ${AZURE_SERVICE_PRINCIPAL_ID} \
                                -p ${AZURE_SERVICE_PRINCIPAL_SECRET} \
                                --tenant ${AZURE_TENANT_ID}
                            
                            az account set --subscription ${AZURE_SUBSCRIPTION_ID}
                            
                            az storage blob upload-batch \
                                --account-name ${STORAGE_ACCOUNT_NAME} \
                                --destination '\$web' \
                                --source ${BUILD_DIR} \
                                --overwrite
                        """
                    }
                }
            }
        }
    }
}
